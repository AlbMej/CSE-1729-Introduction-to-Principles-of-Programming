"Problem 1a"
(define (num-in-gen n)
  (if (= n 0)
  1
  (* 2 (num-in-gen (- n 1)))))

(num-in-gen 3)

"Problem 1b"
(define (num-ancestors n)
  (if (= n 0)
      0
      (+ (num-ancestors (- n 1)) (num-in-gen n))))

(num-ancestors 3)

"Problem 2a"
(define (pell-num n) (cond
                       ((= n 0) 0)
                       ((= n 1) 1)
                       ((+ (* 2 (pell-num (- n 1))) (pell-num (- n 2))))))

(pell-num 2) ;;2
(pell-num 3) ;;5
(pell-num 4) ;;12

"Problem 2b"
(define (comp-pell-num n) (cond
                       ((= n 0) 2)
                       ((= n 1) 2)
                       ((+ (* 2 (comp-pell-num (- n 1))) (comp-pell-num (- n 2))))))

"Problem 2c"
(define (sqrt-2-approx n) (pell-num n) (comp-pell-num n))
(sqrt-2-approx 6) ;;FIX ANSWER

"Problem 3a"
(define (fastexp b e) (cond
                        ((= n 0) 1)
                        ((even? e) (expt (expt b (/ e 2)) 2))
                        ((odd? e) (* b (expt (expt b (/ (- e 1) 2)) 2)))))

                         